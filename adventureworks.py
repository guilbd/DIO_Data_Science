# -*- coding: utf-8 -*-
"""AdventureWorks.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11eJrqa_nncmtpUCwc4cDP6o_Z6JUd_4S
"""

# Importando as bibliotecas
import pandas as pd
import matplotlib.pyplot as plt
plt.style.use("seaborn")
from google.colab import files

#Upload do arquivo via código
arq = files.upload()

#Criando nosso DataFrame
df = pd.read_excel("AdventureWorks.xlsx")

df.head()

#Quantidade de linhas e colunas
df.shape

#Verificando os tipos de dados
df.dtypes

#Qual a receita total?
df["Valor Venda"].sum()

# Qual o custo total? Resp criando a coluna de custo
df["Custo"] = df["Custo Unitário"].mul(df["Quantidade"])

df.head(1)

# Qual o custo total?
round(df["Custo"].sum(), 2)

# LUCRO TOTAL - Criar coluna lucro = recita - custo
df["Lucro"] = df["Valor Venda"] - df["Custo"]

df.head(1)

#Total lucro
round(df["Lucro"].sum(), 2)

"""### **Tempo de Envio**"""

# Criando uma coluna com total de dias para enviar o produto
df["Tempo de Envio"] = df["Data Envio"] - df["Data Venda"]

df.head(1)

#Extraindo apenas os dias
df["Tempo_envio"] = (df["Data Envio"] - df["Data Venda"]).dt.days

df.head(1)

# Verificando o tipo da coluna Tempo_envio
df["Tempo_envio"].dtypes

# Média do tempo de envio por Marca
df.groupby("Marca")["Tempo_envio"].mean()

"""### **Missing Values**"""

# Verificando se temos dados faltantes
df.isnull().sum()

# Agrupamento por Ano e Marca
df.groupby([df["Data Venda"].dt.year, "Marca"])["Lucro"].sum()

# Configurando o formato dos dados acima
pd.options.display.float_format = '{:20,.2f}'.format

#Resetando o index
lucro_ano = df.groupby([df["Data Venda"].dt.year, "Marca"])["Lucro"].sum().reset_index()

lucro_ano

# Qual o total de produtos vendidos?
df.groupby("Produto")["Quantidade"].sum().sort_values(ascending=False)

#Gráfico Total de produtos vendidos
df.groupby("Produto")["Quantidade"].sum().sort_values(ascending=True).plot.barh(title="Total Produtos Vendidos")
plt.xlabel("Total")
plt.ylabel("Produto");

df.groupby(df["Data Venda"].dt.year)["Lucro"].sum().plot.bar(title="Lucro x Ano")
plt.xlabel("Ano")
plt.ylabel("Receita");

df.groupby(df["Data Venda"].dt.year)["Lucro"].sum()

#Selecionando apenas as vendas de 2009
df_2009 = df[df["Data Venda"].dt.year == 2009]

df_2009.head()

df_2009.groupby(df_2009["Data Venda"].dt.month)["Lucro"].sum().plot(title="Lucro x Mês")
plt.xlabel("Mês")
plt.ylabel("Lucro");

df_2009.groupby("Marca")["Lucro"].sum().plot.bar(title="Lucro x Marca")
plt.xlabel("Marca")
plt.ylabel('Lucro')
plt.xticks(rotation='horizontal');

df_2009.groupby("Classe")["Lucro"].sum().plot.bar(title="Lucro x Classe")
plt.xlabel("Classe")
plt.ylabel('Lucro')
plt.xticks(rotation='horizontal');

df["Tempo_envio"].describe()

#Gráfico Boxplot
plt.boxplot(df["Tempo_envio"]);

#Gráfico Histograma
plt.hist(df["Tempo_envio"]);

#Tempo Mínimo de Envio
df["Tempo_envio"].min()

#Tempo Máximo de Envio
df["Tempo_envio"].max()

#Identificando o Outlier
df[df["Tempo_envio"] == 20]

df.to_csv("df_venda_novo.csv", index=False)

